[{"/d/Personal/k/chuma-point-web/src/reportWebVitals.ts":"1","/d/Personal/k/chuma-point-web/src/App.tsx":"2","/d/Personal/k/chuma-point-web/src/pages/Home.tsx":"3","/d/Personal/k/chuma-point-web/src/firebase/config.ts":"4","/d/Personal/k/chuma-point-web/src/index.tsx":"5","/d/Personal/k/chuma-point-web/src/users/Signup.tsx":"6","/d/Personal/k/chuma-point-web/src/users/Login.tsx":"7","/d/Personal/k/chuma-point-web/src/layout/Root.tsx":"8","/d/Personal/k/chuma-point-web/src/pages/Index.tsx":"9","/d/Personal/k/chuma-point-web/src/pages/Bank.tsx":"10","/d/Personal/k/chuma-point-web/src/layout/Authorize.tsx":"11","/d/Personal/k/chuma-point-web/src/pages/Tracker.tsx":"12","/d/Personal/k/chuma-point-web/src/pages/Profile.tsx":"13","/d/Personal/k/chuma-point-web/src/containers/Common.tsx":"14","/d/Personal/k/chuma-point-web/src/containers/Tracker.tsx":"15","/d/Personal/k/chuma-point-web/src/components/Labels/DateTimeLabel.tsx":"16","/d/Personal/k/chuma-point-web/src/components/Inputs/SleepButton.tsx":"17","/d/Personal/k/chuma-point-web/src/components/Labels/MealLabel.tsx":"18","/d/Personal/k/chuma-point-web/src/components/Inputs/MealRecord.tsx":"19","/d/Personal/k/chuma-point-web/src/components/Inputs/SleepRecord.tsx":"20","/d/Personal/k/chuma-point-web/src/console/TrackerMain.tsx":"21","/d/Personal/k/chuma-point-web/src/components/Inputs/MealIconButton.tsx":"22","/d/Personal/k/chuma-point-web/src/components/Inputs/CheckInButton.tsx":"23","/d/Personal/k/chuma-point-web/src/Models/Models.ts":"24","/d/Personal/k/chuma-point-web/src/components/Labels/SleepChart.tsx":"25","/d/Personal/k/chuma-point-web/src/pages/Medicine.tsx":"26","/d/Personal/k/chuma-point-web/src/components/Inputs/MedicineRecord.tsx":"27","/d/Personal/k/chuma-point-web/src/console/MedicineMain.tsx":"28","/d/Personal/k/chuma-point-web/src/console/History.tsx":"29","/d/Personal/k/chuma-point-web/src/containers/History.tsx":"30","/d/Personal/k/chuma-point-web/src/components/Labels/MealChart.tsx":"31","/d/Personal/k/chuma-point-web/src/lib/callables.ts":"32"},{"size":425,"mtime":1611231409249,"results":"33","hashOfConfig":"34"},{"size":995,"mtime":1614709370425,"results":"35","hashOfConfig":"34"},{"size":2193,"mtime":1612647982424,"results":"36","hashOfConfig":"34"},{"size":744,"mtime":1614860800660,"results":"37","hashOfConfig":"34"},{"size":500,"mtime":1611231409245,"results":"38","hashOfConfig":"34"},{"size":6410,"mtime":1612454051533,"results":"39","hashOfConfig":"40"},{"size":6031,"mtime":1614772807845,"results":"41","hashOfConfig":"34"},{"size":8559,"mtime":1612583033107,"results":"42","hashOfConfig":"34"},{"size":1279,"mtime":1612599139858,"results":"43","hashOfConfig":"40"},{"size":3069,"mtime":1612201734085,"results":"44","hashOfConfig":"34"},{"size":1055,"mtime":1614654948519,"results":"45","hashOfConfig":"34"},{"size":1804,"mtime":1614654864494,"results":"46","hashOfConfig":"34"},{"size":2286,"mtime":1611434253265,"results":"47","hashOfConfig":"40"},{"size":4395,"mtime":1614709486661,"results":"48","hashOfConfig":"34"},{"size":11039,"mtime":1614862879038,"results":"49","hashOfConfig":"34"},{"size":978,"mtime":1612462390930,"results":"50","hashOfConfig":"34"},{"size":2143,"mtime":1613637352548,"results":"51","hashOfConfig":"34"},{"size":1592,"mtime":1612462390932,"results":"52","hashOfConfig":"34"},{"size":8948,"mtime":1612453770343,"results":"53","hashOfConfig":"34"},{"size":7568,"mtime":1612582596963,"results":"54","hashOfConfig":"34"},{"size":13009,"mtime":1614534274035,"results":"55","hashOfConfig":"34"},{"size":1264,"mtime":1612462742364,"results":"56","hashOfConfig":"34"},{"size":2371,"mtime":1614862437566,"results":"57","hashOfConfig":"34"},{"size":195,"mtime":1612453705655,"results":"58","hashOfConfig":"40"},{"size":2839,"mtime":1614534864063,"results":"59","hashOfConfig":"34"},{"size":886,"mtime":1612581484364,"results":"60","hashOfConfig":"34"},{"size":9151,"mtime":1612581366577,"results":"61","hashOfConfig":"34"},{"size":5521,"mtime":1612582980812,"results":"62","hashOfConfig":"34"},{"size":3056,"mtime":1614654802119,"results":"63","hashOfConfig":"34"},{"size":4400,"mtime":1614756667122,"results":"64","hashOfConfig":"34"},{"size":2792,"mtime":1614654591897,"results":"65","hashOfConfig":"34"},{"size":286,"mtime":1614861935562,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ko7vc6",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"zrc0zz",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"71"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/d/Personal/k/chuma-point-web/src/reportWebVitals.ts",[],"/d/Personal/k/chuma-point-web/src/App.tsx",[],["151","152"],"/d/Personal/k/chuma-point-web/src/pages/Home.tsx",["153","154","155","156"],"/d/Personal/k/chuma-point-web/src/firebase/config.ts",[],"/d/Personal/k/chuma-point-web/src/index.tsx",[],"/d/Personal/k/chuma-point-web/src/users/Signup.tsx",[],["157","158"],"/d/Personal/k/chuma-point-web/src/users/Login.tsx",[],"/d/Personal/k/chuma-point-web/src/layout/Root.tsx",["159"],"/d/Personal/k/chuma-point-web/src/pages/Index.tsx",[],["160","161"],"/d/Personal/k/chuma-point-web/src/pages/Bank.tsx",[],["162","163"],"/d/Personal/k/chuma-point-web/src/layout/Authorize.tsx",["164"],"/d/Personal/k/chuma-point-web/src/pages/Tracker.tsx",["165","166"],"import React, { useState } from 'react';\nimport TrackerMain from '../console/TrackerMain';\nimport History from '../console/History'\nimport SleepRecord from '../components/Inputs/SleepRecord'\nimport MealRecord from '../components/Inputs/MealRecord'\nimport TrackerContainer from '../containers/Tracker'\nimport HistoryContainer from '../containers/History'\n\n\nexport default (() => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [componentId, setComponentId] = useState<number>(-1);\n    const trackerContainer = TrackerContainer.useContainer();\n    const historyContainer = HistoryContainer.useContainer();\n\n    const handleComponentChanges = (componentId: number) => {\n        setComponentId(componentId);\n    }\n\n    let jsxElement: JSX.Element = <TrackerMain handleComponentChanges={handleComponentChanges} />\n\n\n    switch (componentId) {\n        case 0:\n            jsxElement = <SleepRecord label={'Wake up Time'} recordType={0} handleComponentChanges={handleComponentChanges} sleepTime={trackerContainer.wakeUpTime} />\n            break;\n        case 1:\n            jsxElement = <SleepRecord label={'Bed Time'} recordType={1} handleComponentChanges={handleComponentChanges} sleepTime={trackerContainer.bedTime} />\n            break;\n        case 2:\n            jsxElement = <MealRecord handleComponentChanges={handleComponentChanges} />\n            break;\n        case 3:\n            jsxElement = <History lastWeekSleepTimes={historyContainer.lastWeekSleepTimes} lastWeekMealTimes={historyContainer.lastWeekMealTimes} handleComponentChanges={handleComponentChanges} />\n            break;\n        default:\n            jsxElement = <TrackerMain handleComponentChanges={handleComponentChanges} />\n            break;\n    }\n\n    return (\n        jsxElement\n    )\n}) as React.FC;\n",["167","168"],"/d/Personal/k/chuma-point-web/src/pages/Profile.tsx",[],["169","170"],"/d/Personal/k/chuma-point-web/src/containers/Common.tsx",[],"/d/Personal/k/chuma-point-web/src/containers/Tracker.tsx",["171"],"/d/Personal/k/chuma-point-web/src/components/Labels/DateTimeLabel.tsx",[],["172","173"],"/d/Personal/k/chuma-point-web/src/components/Inputs/SleepButton.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Labels/MealLabel.tsx",["174"],"import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport CommonContainer from '../../containers/Common';\r\nimport { MealRecordModel } from '../../Models/Models'\r\n\r\ninterface Props {\r\n    label: string,\r\n    meals: MealRecordModel[] | undefined,\r\n    index: number\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        cardRoot: {\r\n            minWidth: 186,\r\n            // width: '100%'\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const classes = useStyles();\r\n\r\n    const convertDateTime = (dateTime: string) => {\r\n        return new Date(dateTime).toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit', hour12: false });\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.cardRoot}>\r\n            <CardContent >\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                    {commonContainer.t(props.label)}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {props.meals && props.meals.length !== 0 ? `${convertDateTime(props.meals[props.index].recordDateTime)}` : commonContainer.t('No Record')}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}) as React.FC<Props>;\r\n","/d/Personal/k/chuma-point-web/src/components/Inputs/MealRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Inputs/SleepRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/console/TrackerMain.tsx",["175","176","177","178","179","180","181","182","183","184"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport CommonContainer from '../containers/Common';\r\nimport TrackerContainer from '../containers/Tracker';\r\nimport DateTimeLabel from '../components/Labels/DateTimeLabel'\r\nimport SleepButton from '../components/Inputs/SleepButton';\r\nimport MealLabel from '../components/Labels/MealLabel';\r\nimport MealIconButton from '../components/Inputs/MealIconButton'\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { Stage, Graphics, Text } from '@inlet/react-pixi';\r\nimport * as PIXI from 'pixi.js';\r\n\r\ninterface Props {\r\n    handleComponentChanges: (componentId: number) => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1  70%)\"\r\n        },\r\n        icons: {\r\n            position: \"relative\"\r\n        },\r\n        button: {\r\n            position: \"absolute\",\r\n            // top: `calc(50% - 35px)`,\r\n            // left: `calc(50% - 35px)`,\r\n            width: \"70px\",\r\n            height: \"70px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            backgroundColor: \"#FF8400\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"0.2em\",\r\n            borderColor: \"#FFC421\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        mealIconButton: {\r\n            position: \"absolute\",\r\n            left: \"5px\",\r\n            width: \"35px\",\r\n            height: \"35px\",\r\n            display: \"flex\",\r\n            borderRadius: '50%',\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            fontSize: \"10px\",\r\n            backgroundColor: \"#FF8400\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        donut: {\r\n            position: \"relative\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n        },\r\n        donutDefault: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\"\r\n        },\r\n        donutWhite: {\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFF\",\r\n            top: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            zIndex: 2\r\n        },\r\n        donutLine: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\"\r\n        },\r\n        donutText: {\r\n            top: \"35px\",\r\n            left: \"35px\",\r\n            width: \"230px\",\r\n            height: \"230px\",\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1 70%)\",\r\n            position: \"absolute\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 3\r\n        },\r\n        donutCase: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFC421\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            backgroundClip: \"border-box\",\r\n            overflow: \"hidden\"\r\n        },\r\n        mealButton: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            background: '#fff',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: '#5998AB',\r\n            height: 48,\r\n            width: 280,\r\n            padding: '0 30px',\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FFF\"\r\n            }\r\n        },\r\n        historyButton: {\r\n            top: \"-22px\",\r\n            width: \"90px\",\r\n            height: \"90px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            color: \"#FF8400\",\r\n            backgroundColor: \"#FFF\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FFF\"\r\n            }\r\n        },\r\n        table: {\r\n            minWidth: 300,\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [now, setNow] = useState<Date>(new Date());\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const trackerContainer = TrackerContainer.useContainer();\r\n\r\n    const classes = useStyles();\r\n    const left = \"-35px\";\r\n    const top = \"-185px\";\r\n\r\n    let mealIcons = [\r\n        <MealIconButton key={0} top={-165} left={-35} />,\r\n        <MealIconButton key={1} top={-35} left={-165} />,\r\n        // <MealIconButton key={2} top={35} left={165} />,\r\n    ];\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            // await trackerContainer.getTrackerRecord(now);\r\n            setIsLoading(false)\r\n        })()\r\n    }, []);\r\n\r\n    const [dateTime, setDateTime] = useState<Date>(new Date());\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            setDateTime(() => new Date());\r\n        }, 60000);\r\n        return () => clearInterval(id);\r\n    }, []);\r\n\r\n    const createGradient = (from: string, to: string, width: number, height: number) => {\r\n        const c: HTMLCanvasElement = document.createElement(\"canvas\");\r\n        c.width = width\r\n        c.height = height\r\n        const ctx = c.getContext(\"2d\");\r\n        if (ctx) {\r\n            const grd = ctx && ctx.createLinearGradient(0, 0, width, height);\r\n            grd.addColorStop(0, from);\r\n            grd.addColorStop(1, to);\r\n            ctx.fillStyle = grd;\r\n            ctx.fillRect(0, 0, width, height);\r\n        }\r\n\r\n        return PIXI.Texture.from(c) as any;\r\n    }\r\n\r\n    const gradient = createGradient('#acb6e5', '#86fde8', 300, 300)\r\n\r\n    const getMealTypeName = (meanType: number) => {\r\n        let mealTypeName = '';\r\n        switch (meanType) {\r\n            case 0:\r\n                mealTypeName = commonContainer.t('Breakfast');\r\n                break;\r\n            case 1:\r\n                mealTypeName = commonContainer.t('Lunch');\r\n                break;\r\n            case 2:\r\n                mealTypeName = commonContainer.t('Snack');\r\n                break;\r\n            case 3:\r\n                mealTypeName = commonContainer.t('Dinner');\r\n                break;\r\n            case 4:\r\n                mealTypeName = commonContainer.t('Drink');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return mealTypeName;\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                <Grid key={0} item>\r\n                    <Typography variant=\"h6\" component={'h1'} style={{ paddingTop: '10px', color: 'white' }}>\r\n                        {commonContainer.t('Chuma Tracker')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <div className={classes.donut}>\r\n                        {mealIcons}\r\n                        <div className={classes.donutDefault}></div>\r\n                        <div className={classes.donutLine}></div>\r\n                        <div className={classes.donutText}>\r\n                            <DateTimeLabel />\r\n                        </div>\r\n                        <div className={classes.donutCase}></div>\r\n                    </div>\r\n                    {/* <Stage width={300} height={300} options={{ transparent: true }}>\r\n                        <Graphics\r\n                            draw={g => {\r\n                                g.lineStyle(35, 0xFFC421, 1, 1)\r\n                                g.beginFill(0xffffff, 1)\r\n                                g.beginTextureFill(gradient);\r\n                                g.drawCircle(150, 150, 110)\r\n                                g.endFill()\r\n                            }}\r\n                        />\r\n                        <Text x={120} y={120} style={{ color: '#5998AB' }} text={dateTime.toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit', hour12: false })} />\r\n                        <Text x={80} y={150} style={{ color: '#5998AB' }} text={dateTime.toLocaleDateString('ja-JP', { year: \"numeric\", month: \"long\", day: \"numeric\" })} />\r\n                    </Stage> */}\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>RecordDateTime</TableCell>\r\n                                    <TableCell align=\"right\">MealType</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {trackerContainer.meals.map((meal, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\">{new Date(meal.recordDateTime).toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit', hour12: false })}</TableCell>\r\n                                        <TableCell align=\"right\">{getMealTypeName(meal.mealType)}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid key={2} item>\r\n                    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                        <Grid key={0} item>\r\n                            <SleepButton label={'Wake up Time'} data={trackerContainer.wakeUpTime} handleComponentChanges={props.handleComponentChanges} recordType={0} />\r\n                        </Grid>\r\n                        <Grid key={1} item>\r\n                            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={3}>\r\n                                <Grid key={0} item>\r\n                                    <IconButton\r\n                                        aria-label={'History'}\r\n                                        className={classes.historyButton}\r\n                                        onClick={() => props.handleComponentChanges(3)}\r\n                                    >\r\n                                        <div>\r\n                                            <TimelineIcon fontSize=\"large\" style={{ color: '#5998AB' }} />\r\n                                            <Typography style={{ fontSize: '0.6em', color: '#5998AB' }} variant=\"body1\" component={'p'}>\r\n                                                {commonContainer.t('History')}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid key={2} item>\r\n                            <SleepButton label={'Bed Time'} data={trackerContainer.bedTime} handleComponentChanges={props.handleComponentChanges} recordType={1} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid key={3} item>\r\n                    <IconButton\r\n                        aria-label=\"addMeal\"\r\n                        className={classes.mealButton}\r\n                        onClick={() => props.handleComponentChanges(2)}\r\n                    >\r\n                        <RestaurantIcon className={classes.mealIconButton} />\r\n                        <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\r\n                            {commonContainer.t('Record Meal')}\r\n                        </Typography>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid key={4} item style={{ marginBottom: '40px' }}>\r\n                    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\" spacing={0}>\r\n                        <Grid key={0} item>\r\n                            <MealLabel label={'First Meal'} meals={trackerContainer.meals} index={0} />\r\n                        </Grid>\r\n                        <Grid key={1} item>\r\n                            <MealLabel label={'Recent Meal'} meals={trackerContainer.meals} index={trackerContainer.meals.length - 1} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}) as React.FC<Props>;\r\n",["185","186"],"/d/Personal/k/chuma-point-web/src/components/Inputs/MealIconButton.tsx",["187"],"/d/Personal/k/chuma-point-web/src/components/Inputs/CheckInButton.tsx",["188","189","190","191","192"],"import React, { useState } from 'react';\nimport { Card, CardActionArea, Button, CardActions, CardMedia, Typography, Grid } from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport CommonContainer from '../../containers/Common';\nimport TrackerContainer from '../../containers/Tracker';\nimport homebear from '../../images/homebear.jpg'\n\ninterface Props {\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n            background: 'linear-gradient(55deg, #0989D9 10%, #63BDDB 70%)',\n            borderRadius: 30,\n            border: 0,\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n            boxShadow: '0 3px 5px 2px rgba(67, 120, 138, .3)',\n        },\n        root: {\n            // maxWidth: 345,\n            width: 200\n        },\n    })\n);\n\nexport default ((props) => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [sending, setSending] = useState(false);\n    const commonContainer = CommonContainer.useContainer();\n    const trackerContainer = TrackerContainer.useContainer();\n\n    const classes = useStyles();\n\n    const handleCheckIn = async () => {\n        await trackerContainer.addPoints(1);\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Check In Polar Bear\"\n                    height=\"240\"\n                    image={homebear}\n                    title=\"Check In Polar Bear\"\n                />\n            </CardActionArea>\n            <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\n                {trackerContainer.isCheckedIn ? commonContainer.t('AlreadyCheckedIn') : ''}\n            </Typography>\n            <CardActions>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={trackerContainer.isCheckedIn}\n                    className={classes.submit}\n                    onClick={handleCheckIn}\n                >\n                    {commonContainer.t('CheckIn')}\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}) as React.FC<Props>;\n","/d/Personal/k/chuma-point-web/src/Models/Models.ts",[],"/d/Personal/k/chuma-point-web/src/components/Labels/SleepChart.tsx",["193","194","195","196","197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core';\r\nimport { Paper, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, } from 'recharts';\r\nimport { format, getUnixTime, parse } from 'date-fns'\r\nimport CommonContainer from '../../containers/Common';\r\nimport { LastWeekSleepTimeModel } from '../../Models/Models'\r\n\r\ninterface Props {\r\n    lastWeekSleepTimes: LastWeekSleepTimeModel[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        charts: {\r\n            width: '100%',\r\n            height: '300px',\r\n        },\r\n        card: {\r\n            width: '100%',\r\n            height: '300px',\r\n        }\r\n    }),\r\n);\r\n\r\nexport default ((props) => {\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const classes = useStyles(props);\r\n\r\n    const formatDate = (x: string) => {\r\n        let formattedDate = '今日';\r\n        let today = new Date().toLocaleDateString('sv-SE')\r\n        if (x !== today && x !== 'auto') {\r\n            formattedDate = format(new Date(x), 'd日');\r\n        }\r\n        return formattedDate;\r\n    }\r\n\r\n    if (!loading) {\r\n        return (<div><CircularProgress />Loading...</div>)\r\n\r\n    } else {\r\n        return (\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={1}>\r\n                <Grid key={0} item>\r\n                    <Typography component={'h4'}>\r\n                        {commonContainer.t('Bed Time')}`・{commonContainer.t('Wake up Time')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <LineChart\r\n                        width={350}\r\n                        height={300}\r\n                        data={props.lastWeekSleepTimes}\r\n                        margin={{\r\n                            top: 5, right: 3, left: 3, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"createdDate\" tickFormatter={x => formatDate(x)} tick={{ fontSize: '.7rem' }} />\r\n                        <YAxis domain={[0, 24]} ticks={[0, 3, 6, 9, 12, 15, 18, 21, 24]} unit=\"時\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"wakeUpTime\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"bedTime\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}) as React.FC<Props>;\r\n",["199","200"],"/d/Personal/k/chuma-point-web/src/pages/Medicine.tsx",["201","202"],"import React, { useState } from 'react';\r\nimport MedicineMain from '../console/MedicineMain';\r\nimport MedicineRecord from '../components/Inputs/MedicineRecord'\r\n\r\nexport default (() => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [componentId, setComponentId] = useState<number>(-1);\r\n\r\n    const handleComponentChanges = (componentId: number) => {\r\n        setComponentId(componentId);\r\n    }\r\n\r\n    let jsxElement: JSX.Element = <MedicineMain handleComponentChanges={handleComponentChanges} />\r\n\r\n    switch (componentId) {\r\n        case 0:\r\n            jsxElement = <MedicineRecord handleComponentChanges={handleComponentChanges} />\r\n            break;\r\n        default:\r\n            jsxElement = <MedicineMain handleComponentChanges={handleComponentChanges} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        jsxElement\r\n    )\r\n}) as React.FC;\r\n","/d/Personal/k/chuma-point-web/src/components/Inputs/MedicineRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/console/MedicineMain.tsx",["203","204","205","206","207","208","209"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport CommonContainer from '../containers/Common';\r\nimport TrackerContainer from '../containers/Tracker';\r\nimport DateTimeLabel from '../components/Labels/DateTimeLabel'\r\nimport SleepButton from '../components/Inputs/SleepButton';\r\nimport MealLabel from '../components/Labels/MealLabel';\r\nimport MealIconButton from '../components/Inputs/MealIconButton'\r\n\r\ninterface Props {\r\n    handleComponentChanges: (componentId: number) => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // height: '80vh',\r\n            // display: 'flex',\r\n            // justify: 'flex-start',\r\n            // alignItems: 'center',\r\n            background: \"linear-gradient(180deg, #f09c48 10%, #fff  70%)\"\r\n        },\r\n        icons: {\r\n            position: \"relative\"\r\n        },\r\n        button: {\r\n            position: \"absolute\",\r\n            // top: `calc(50% - 35px)`,\r\n            // left: `calc(50% - 35px)`,\r\n            width: \"70px\",\r\n            height: \"70px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            backgroundColor: \"#FF8400\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"0.2em\",\r\n            borderColor: \"#FFC421\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        donut: {\r\n            position: \"relative\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n        },\r\n        donutDefault: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\"\r\n        },\r\n        donutWhite: {\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFF\",\r\n            top: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            zIndex: 2\r\n        },\r\n        donutLine: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\"\r\n        },\r\n        donutText: {\r\n            top: \"35px\",\r\n            left: \"35px\",\r\n            width: \"230px\",\r\n            height: \"230px\",\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1 70%)\",\r\n            position: \"absolute\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 3\r\n        },\r\n        donutCase: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFC421\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            backgroundClip: \"border-box\",\r\n            overflow: \"hidden\"\r\n        },\r\n        mealButton: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            background: '#f09c48',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: '#5998AB',\r\n            height: 48,\r\n            width: 280,\r\n            padding: '0 30px',\r\n            \"&:hover\": {\r\n                backgroundColor: \"#f09c48\"\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [now, setNow] = useState<Date>(new Date());\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const trackerContainer = TrackerContainer.useContainer();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            await trackerContainer.getTrackerRecord(now);\r\n            setIsLoading(false)\r\n        })()\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                <Grid key={0} item>\r\n                    <Typography variant=\"h6\" component={'h1'} style={{ paddingTop: '10px', color: 'white' }}>\r\n                        {commonContainer.t('Chuma Tracker')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <div className={classes.donut}>\r\n                        <div className={classes.donutDefault}></div>\r\n                        <div className={classes.donutLine}></div>\r\n                        <div className={classes.donutText}>\r\n                            <DateTimeLabel />\r\n                        </div>\r\n                        <div className={classes.donutCase}></div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid key={3} item>\r\n                    <IconButton\r\n                        aria-label=\"addMeal\"\r\n                        className={classes.mealButton}\r\n                        onClick={() => props.handleComponentChanges(2)}\r\n                    >\r\n                        <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\r\n                            {commonContainer.t('Record Meal')}\r\n                        </Typography>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}) as React.FC<Props>;\r\n",["210","211"],"/d/Personal/k/chuma-point-web/src/console/History.tsx",["212","213","214","215","216"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport CommonContainer from '../containers/Common';\r\nimport TrackerContainer from '../containers/Tracker';\r\nimport SleepChart from '../components/Labels/SleepChart';\r\nimport MealChart from '../components/Labels/MealChart';\r\nimport { LastWeekSleepTimeModel, LastWeekMealTimeModel } from '../Models/Models';\r\n\r\ninterface Props {\r\n    lastWeekSleepTimes: LastWeekSleepTimeModel[],\r\n    lastWeekMealTimes: LastWeekMealTimeModel[],\r\n    handleComponentChanges: (componentId: number) => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            marginBottom: '100px'\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            background: 'linear-gradient(55deg, #0989D9 10%, #63BDDB 70%)',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            boxShadow: '0 3px 5px 2px rgba(67, 120, 138, .3)',\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [now, setNow] = useState<Date>(new Date());\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const trackerContainer = TrackerContainer.useContainer();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            // await trackerContainer.getTrackerRecord(now);\r\n            // await historyContainer.getLastWeekSleepTimes(now);\r\n            setIsLoading(false)\r\n        })()\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                <Grid key={0} item>\r\n                    <Typography variant=\"h6\" component={'h1'} style={{ paddingTop: '10px', color: 'blue' }}>\r\n                        {commonContainer.t('History')}(仮)\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <SleepChart lastWeekSleepTimes={props.lastWeekSleepTimes} />\r\n                </Grid>\r\n                <Grid key={2} item>\r\n                    <MealChart lastWeekMealTimes={props.lastWeekMealTimes} />\r\n                </Grid>\r\n                <Grid key={3} item>\r\n                    <Button\r\n                        type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => props.handleComponentChanges(-1)}\r\n                        className={classes.submit}\r\n                    >\r\n                        {commonContainer.t('Back')}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}) as React.FC<Props>;\r\n","/d/Personal/k/chuma-point-web/src/containers/History.tsx",["217","218"],"import { useState } from 'react';\r\nimport useReactRouter from 'use-react-router';\r\nimport { createContainer } from 'unstated-next';\r\nimport { auth, firestore, firebase } from '../firebase/config';\r\nimport { LastWeekSleepTimeModel, LastWeekMealTimeModel } from '../Models/Models'\r\nimport { format, getUnixTime, parse } from 'date-fns'\r\n\r\nexport default createContainer(() => {\r\n    const { history } = useReactRouter();\r\n    const [lastWeekSleepTimes, setLastWeekSleepTimes] = useState<LastWeekSleepTimeModel[]>([])\r\n    const [lastWeekMealTimes, setLastWeekMealTimes] = useState<LastWeekMealTimeModel[]>([])\r\n\r\n    const getLastWeekSleepTimes = async (today: Date) => {\r\n        try {\r\n            auth.onAuthStateChanged(async user => {\r\n                if (user) {\r\n                    const trackerRecordRef = firestore\r\n                        .collection('users').doc(user.uid)\r\n                        .collection('trackerRecords');\r\n\r\n                    // TODO\r\n                    // if (lastWeekSleepTimes.length < 0) {\r\n                    // if (lastWeekSleepTimes[lastWeekSleepTimes.length - 1].createdDate !== format(today, 'yyyy-MM-dd')) {\r\n                    //     console.log(234)\r\n                    // }\r\n                    let lastSevenDayParameter = getLastSevenDay(today);\r\n\r\n                    const snapshot = await trackerRecordRef\r\n                        // .where(firebase.firestore.FieldPath.documentId(), 'in', lastSevenDayParameter)\r\n                        .where(firebase.firestore.FieldPath.documentId(), 'in', lastSevenDayParameter)\r\n                        .get();\r\n\r\n                    let sleepTimeDatas: LastWeekSleepTimeModel[] = [];\r\n\r\n                    snapshot.forEach(doc => {\r\n                        let data = doc.data();\r\n                        let sleepTimeData = { 'createdDate': doc.id, 'wakeUpTime': new Date(data.wakeUpTime).getHours().toString(), 'bedTime': new Date(data.bedTime).getHours().toString() };\r\n\r\n                        sleepTimeDatas.push(sleepTimeData);\r\n                    });\r\n                    setLastWeekSleepTimes(sleepTimeDatas);\r\n                    // }\r\n\r\n                }\r\n            })\r\n        } catch (err) {\r\n            if (err.status === 401) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLastWeekMealTimes = async (today: Date) => {\r\n        try {\r\n            auth.onAuthStateChanged(async user => {\r\n                if (user) {\r\n                    const trackerRecordRef = firestore\r\n                        .collection('users').doc(user.uid)\r\n                        .collection('trackerRecords');\r\n\r\n                    // TODO\r\n                    // if (lastWeekSleepTimes.length < 0) {\r\n                    // if (lastWeekSleepTimes[lastWeekSleepTimes.length - 1].createdDate !== format(today, 'yyyy-MM-dd')) {\r\n                    //     console.log(234)\r\n                    // }\r\n                    let lastSevenDayParameter = getLastSevenDay(today);\r\n\r\n                    const snapshot = await trackerRecordRef\r\n                        .where(firebase.firestore.FieldPath.documentId(), 'in', lastSevenDayParameter)\r\n                        .get();\r\n\r\n                    let mealTimeDatas: LastWeekMealTimeModel[] = [];\r\n\r\n                    snapshot.forEach(doc => {\r\n                        let data = doc.data();\r\n                        let mealTimeData = { 'createdDate': doc.id, 'wakeUpTime': new Date(data.wakeUpTime).getHours().toString(), 'bedTime': new Date(data.bedTime).getHours().toString() };\r\n\r\n                        mealTimeDatas.push(mealTimeData);\r\n                    });\r\n                    setLastWeekMealTimes(mealTimeDatas);\r\n                    // }\r\n\r\n                }\r\n            })\r\n        } catch (err) {\r\n            if (err.status === 401) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLastSevenDay = (today: Date) => {\r\n        let lastSevenDays: string[] = [];\r\n\r\n        lastSevenDays.push(format(today, 'yyyy-MM-dd'));\r\n        for (let i = 1; i < 7; i++) {\r\n            lastSevenDays.push(format(new Date(today.getFullYear(), today.getMonth(), today.getDate() - i), 'yyyy-MM-dd'))\r\n        }\r\n        return lastSevenDays;\r\n    }\r\n\r\n    return {\r\n        getLastWeekSleepTimes, lastWeekSleepTimes, getLastWeekMealTimes, lastWeekMealTimes\r\n    };\r\n});","/d/Personal/k/chuma-point-web/src/components/Labels/MealChart.tsx",["219","220","221","222","223","224"],"import React, { useState, useEffect } from \"react\";\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core';\r\nimport { Paper, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, } from 'recharts';\r\nimport { format, getUnixTime, parse } from 'date-fns'\r\nimport CommonContainer from '../../containers/Common';\r\nimport { LastWeekMealTimeModel } from '../../Models/Models'\r\n\r\ninterface Props {\r\n    lastWeekMealTimes: LastWeekMealTimeModel[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        charts: {\r\n            width: '100%',\r\n            height: '300px',\r\n        },\r\n        card: {\r\n            width: '100%',\r\n            height: '300px',\r\n        }\r\n    }),\r\n);\r\n\r\nexport default ((props) => {\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const classes = useStyles(props);\r\n\r\n    const formatDate = (x: string) => {\r\n        let formattedDate = '今日';\r\n        let today = new Date().toLocaleDateString('sv-SE')\r\n        if (x !== today && x !== 'auto') {\r\n            formattedDate = format(new Date(x), 'd日');\r\n        }\r\n        return formattedDate;\r\n    }\r\n\r\n    if (!loading) {\r\n        return (<div><CircularProgress />Loading...</div>)\r\n\r\n    } else {\r\n        return (\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={1}>\r\n                <Grid key={0} item>\r\n                    <Typography component={'h4'}>\r\n                        {commonContainer.t('Meal')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <LineChart\r\n                        width={350}\r\n                        height={300}\r\n                        data={props.lastWeekMealTimes}\r\n                        margin={{\r\n                            top: 5, right: 3, left: 3, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"createdDate\" tickFormatter={x => formatDate(x)} tick={{ fontSize: '.7rem' }} />\r\n                        <YAxis domain={[0, 24]} ticks={[0, 3, 6, 9, 12, 15, 18, 21, 24]} unit=\"時\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"wakeUpTime\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"bedTime\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}) as React.FC<Props>;\r\n","/d/Personal/k/chuma-point-web/src/lib/callables.ts",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":19},{"ruleId":"229","severity":1,"message":"233","line":2,"column":21,"nodeType":"231","messageId":"232","endLine":2,"endColumn":30},{"ruleId":"229","severity":1,"message":"234","line":6,"column":10,"nodeType":"231","messageId":"232","endLine":6,"endColumn":15},{"ruleId":"229","severity":1,"message":"235","line":6,"column":17,"nodeType":"231","messageId":"232","endLine":6,"endColumn":25},{"ruleId":"225","replacedBy":"236"},{"ruleId":"227","replacedBy":"237"},{"ruleId":"229","severity":1,"message":"238","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":23},{"ruleId":"225","replacedBy":"239"},{"ruleId":"227","replacedBy":"240"},{"ruleId":"225","replacedBy":"241"},{"ruleId":"227","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":25,"column":8,"nodeType":"245","endLine":25,"endColumn":10,"suggestions":"246"},{"ruleId":"229","severity":1,"message":"247","line":11,"column":12,"nodeType":"231","messageId":"232","endLine":11,"endColumn":21},{"ruleId":"229","severity":1,"message":"248","line":11,"column":23,"nodeType":"231","messageId":"232","endLine":11,"endColumn":35},{"ruleId":"225","replacedBy":"249"},{"ruleId":"227","replacedBy":"250"},{"ruleId":"225","replacedBy":"251"},{"ruleId":"227","replacedBy":"252"},{"ruleId":"229","severity":1,"message":"253","line":5,"column":8,"nodeType":"231","messageId":"232","endLine":5,"endColumn":13},{"ruleId":"225","replacedBy":"254"},{"ruleId":"227","replacedBy":"255"},{"ruleId":"229","severity":1,"message":"256","line":3,"column":29,"nodeType":"231","messageId":"232","endLine":3,"endColumn":33},{"ruleId":"229","severity":1,"message":"234","line":12,"column":10,"nodeType":"231","messageId":"232","endLine":12,"endColumn":15},{"ruleId":"229","severity":1,"message":"235","line":12,"column":17,"nodeType":"231","messageId":"232","endLine":12,"endColumn":25},{"ruleId":"229","severity":1,"message":"257","line":12,"column":27,"nodeType":"231","messageId":"232","endLine":12,"endColumn":31},{"ruleId":"229","severity":1,"message":"247","line":144,"column":12,"nodeType":"231","messageId":"232","endLine":144,"endColumn":21},{"ruleId":"229","severity":1,"message":"258","line":145,"column":12,"nodeType":"231","messageId":"232","endLine":145,"endColumn":15},{"ruleId":"229","severity":1,"message":"259","line":145,"column":17,"nodeType":"231","messageId":"232","endLine":145,"endColumn":23},{"ruleId":"229","severity":1,"message":"260","line":150,"column":11,"nodeType":"231","messageId":"232","endLine":150,"endColumn":15},{"ruleId":"229","severity":1,"message":"261","line":151,"column":11,"nodeType":"231","messageId":"232","endLine":151,"endColumn":14},{"ruleId":"229","severity":1,"message":"262","line":167,"column":12,"nodeType":"231","messageId":"232","endLine":167,"endColumn":20},{"ruleId":"229","severity":1,"message":"263","line":192,"column":11,"nodeType":"231","messageId":"232","endLine":192,"endColumn":19},{"ruleId":"225","replacedBy":"264"},{"ruleId":"227","replacedBy":"265"},{"ruleId":"229","severity":1,"message":"266","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"256","line":2,"column":76,"nodeType":"231","messageId":"232","endLine":2,"endColumn":80},{"ruleId":"229","severity":1,"message":"247","line":31,"column":12,"nodeType":"231","messageId":"232","endLine":31,"endColumn":21},{"ruleId":"229","severity":1,"message":"248","line":31,"column":23,"nodeType":"231","messageId":"232","endLine":31,"endColumn":35},{"ruleId":"229","severity":1,"message":"267","line":32,"column":12,"nodeType":"231","messageId":"232","endLine":32,"endColumn":19},{"ruleId":"229","severity":1,"message":"268","line":32,"column":21,"nodeType":"231","messageId":"232","endLine":32,"endColumn":31},{"ruleId":"229","severity":1,"message":"269","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"270","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"271","line":5,"column":18,"nodeType":"231","messageId":"232","endLine":5,"endColumn":29},{"ruleId":"229","severity":1,"message":"272","line":5,"column":31,"nodeType":"231","messageId":"232","endLine":5,"endColumn":36},{"ruleId":"229","severity":1,"message":"273","line":31,"column":21,"nodeType":"231","messageId":"232","endLine":31,"endColumn":31},{"ruleId":"229","severity":1,"message":"274","line":33,"column":11,"nodeType":"231","messageId":"232","endLine":33,"endColumn":18},{"ruleId":"225","replacedBy":"275"},{"ruleId":"227","replacedBy":"276"},{"ruleId":"229","severity":1,"message":"247","line":6,"column":12,"nodeType":"231","messageId":"232","endLine":6,"endColumn":21},{"ruleId":"229","severity":1,"message":"248","line":6,"column":23,"nodeType":"231","messageId":"232","endLine":6,"endColumn":35},{"ruleId":"229","severity":1,"message":"277","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":22},{"ruleId":"229","severity":1,"message":"278","line":8,"column":8,"nodeType":"231","messageId":"232","endLine":8,"endColumn":19},{"ruleId":"229","severity":1,"message":"279","line":9,"column":8,"nodeType":"231","messageId":"232","endLine":9,"endColumn":17},{"ruleId":"229","severity":1,"message":"280","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":22},{"ruleId":"229","severity":1,"message":"247","line":115,"column":12,"nodeType":"231","messageId":"232","endLine":115,"endColumn":21},{"ruleId":"229","severity":1,"message":"259","line":116,"column":17,"nodeType":"231","messageId":"232","endLine":116,"endColumn":23},{"ruleId":"243","severity":1,"message":"281","line":128,"column":8,"nodeType":"245","endLine":128,"endColumn":10,"suggestions":"282"},{"ruleId":"225","replacedBy":"283"},{"ruleId":"227","replacedBy":"284"},{"ruleId":"229","severity":1,"message":"285","line":2,"column":24,"nodeType":"231","messageId":"232","endLine":2,"endColumn":34},{"ruleId":"229","severity":1,"message":"247","line":35,"column":12,"nodeType":"231","messageId":"232","endLine":35,"endColumn":21},{"ruleId":"229","severity":1,"message":"258","line":36,"column":12,"nodeType":"231","messageId":"232","endLine":36,"endColumn":15},{"ruleId":"229","severity":1,"message":"259","line":36,"column":17,"nodeType":"231","messageId":"232","endLine":36,"endColumn":23},{"ruleId":"229","severity":1,"message":"286","line":38,"column":11,"nodeType":"231","messageId":"232","endLine":38,"endColumn":27},{"ruleId":"229","severity":1,"message":"271","line":6,"column":18,"nodeType":"231","messageId":"232","endLine":6,"endColumn":29},{"ruleId":"229","severity":1,"message":"272","line":6,"column":31,"nodeType":"231","messageId":"232","endLine":6,"endColumn":36},{"ruleId":"229","severity":1,"message":"269","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"270","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"271","line":5,"column":18,"nodeType":"231","messageId":"232","endLine":5,"endColumn":29},{"ruleId":"229","severity":1,"message":"272","line":5,"column":31,"nodeType":"231","messageId":"232","endLine":5,"endColumn":36},{"ruleId":"229","severity":1,"message":"273","line":31,"column":21,"nodeType":"231","messageId":"232","endLine":31,"endColumn":31},{"ruleId":"229","severity":1,"message":"274","line":33,"column":11,"nodeType":"231","messageId":"232","endLine":33,"endColumn":18},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"@typescript-eslint/no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Stage' is defined but never used.","'Graphics' is defined but never used.",["287"],["288"],"'ScatterPlotIcon' is defined but never used.",["287"],["288"],["287"],["288"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'commonContainer', 'history', 'historyContainer', and 'trackerContainer'. Either include them or remove the dependency array.","ArrayExpression",["289"],"'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.",["287"],["288"],["287"],["288"],"'axios' is defined but never used.",["287"],["288"],"'Grid' is defined but never used.","'Text' is defined but never used.","'now' is assigned a value but never used.","'setNow' is assigned a value but never used.","'left' is assigned a value but never used.","'top' is assigned a value but never used.","'dateTime' is assigned a value but never used.","'gradient' is assigned a value but never used.",["287"],["288"],"'useState' is defined but never used.","'sending' is assigned a value but never used.","'setSending' is assigned a value but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'getUnixTime' is defined but never used.","'parse' is defined but never used.","'setLoading' is assigned a value but never used.","'classes' is assigned a value but never used.",["287"],["288"],"'RestaurantIcon' is defined but never used.","'SleepButton' is defined but never used.","'MealLabel' is defined but never used.","'MealIconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'now' and 'trackerContainer'. Either include them or remove the dependency array.",["290"],["287"],["288"],"'IconButton' is defined but never used.","'trackerContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [commonContainer, history, historyContainer, trackerContainer]",{"range":"295","text":"296"},"Update the dependencies array to be: [now, trackerContainer]",{"range":"297","text":"298"},[1000,1002],"[commonContainer, history, historyContainer, trackerContainer]",[3995,3997],"[now, trackerContainer]"]