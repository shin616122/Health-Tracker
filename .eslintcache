[{"/d/Personal/k/chuma-point-web/src/reportWebVitals.ts":"1","/d/Personal/k/chuma-point-web/src/App.tsx":"2","/d/Personal/k/chuma-point-web/src/pages/Home.tsx":"3","/d/Personal/k/chuma-point-web/src/firebase/config.ts":"4","/d/Personal/k/chuma-point-web/src/index.tsx":"5","/d/Personal/k/chuma-point-web/src/users/Signup.tsx":"6","/d/Personal/k/chuma-point-web/src/users/Login.tsx":"7","/d/Personal/k/chuma-point-web/src/layout/Root.tsx":"8","/d/Personal/k/chuma-point-web/src/pages/Index.tsx":"9","/d/Personal/k/chuma-point-web/src/pages/Bank.tsx":"10","/d/Personal/k/chuma-point-web/src/layout/Authorize.tsx":"11","/d/Personal/k/chuma-point-web/src/pages/Tracker.tsx":"12","/d/Personal/k/chuma-point-web/src/pages/Profile.tsx":"13","/d/Personal/k/chuma-point-web/src/containers/Common.tsx":"14","/d/Personal/k/chuma-point-web/src/containers/Tracker.tsx":"15","/d/Personal/k/chuma-point-web/src/components/Labels/DateTimeLabel.tsx":"16","/d/Personal/k/chuma-point-web/src/components/Inputs/SleepButton.tsx":"17","/d/Personal/k/chuma-point-web/src/components/Labels/MealLabel.tsx":"18","/d/Personal/k/chuma-point-web/src/components/Inputs/MealRecord.tsx":"19","/d/Personal/k/chuma-point-web/src/components/Inputs/SleepRecord.tsx":"20","/d/Personal/k/chuma-point-web/src/console/TrackerMain.tsx":"21","/d/Personal/k/chuma-point-web/src/components/Inputs/MealIconButton.tsx":"22","/d/Personal/k/chuma-point-web/src/components/Inputs/CheckInButton.tsx":"23","/d/Personal/k/chuma-point-web/src/Models/Models.ts":"24","/d/Personal/k/chuma-point-web/src/components/Labels/SleepChart.tsx":"25","/d/Personal/k/chuma-point-web/src/pages/Medicine.tsx":"26","/d/Personal/k/chuma-point-web/src/components/Inputs/MedicineRecord.tsx":"27","/d/Personal/k/chuma-point-web/src/console/MedicineMain.tsx":"28","/d/Personal/k/chuma-point-web/src/console/History.tsx":"29","/d/Personal/k/chuma-point-web/src/containers/History.tsx":"30"},{"size":425,"mtime":1611231409249,"results":"31","hashOfConfig":"32"},{"size":1010,"mtime":1612204062018,"results":"33","hashOfConfig":"32"},{"size":2227,"mtime":1612584237778,"results":"34","hashOfConfig":"32"},{"size":512,"mtime":1611239735439,"results":"35","hashOfConfig":"32"},{"size":500,"mtime":1611231409245,"results":"36","hashOfConfig":"32"},{"size":6410,"mtime":1612454051533,"results":"37","hashOfConfig":"32"},{"size":5267,"mtime":1612454088416,"results":"38","hashOfConfig":"32"},{"size":8559,"mtime":1612583033107,"results":"39","hashOfConfig":"32"},{"size":1279,"mtime":1612599139858,"results":"40","hashOfConfig":"32"},{"size":3069,"mtime":1612201734085,"results":"41","hashOfConfig":"32"},{"size":982,"mtime":1612634795492,"results":"42","hashOfConfig":"32"},{"size":1749,"mtime":1612634011261,"results":"43","hashOfConfig":"32"},{"size":2286,"mtime":1611434253265,"results":"44","hashOfConfig":"32"},{"size":4499,"mtime":1612453860054,"results":"45","hashOfConfig":"32"},{"size":10890,"mtime":1612625523588,"results":"46","hashOfConfig":"32"},{"size":978,"mtime":1612462390930,"results":"47","hashOfConfig":"32"},{"size":2126,"mtime":1612625570764,"results":"48","hashOfConfig":"32"},{"size":1592,"mtime":1612462390932,"results":"49","hashOfConfig":"32"},{"size":8948,"mtime":1612453770343,"results":"50","hashOfConfig":"32"},{"size":7568,"mtime":1612582596963,"results":"51","hashOfConfig":"32"},{"size":9063,"mtime":1612584291756,"results":"52","hashOfConfig":"32"},{"size":1264,"mtime":1612462742364,"results":"53","hashOfConfig":"32"},{"size":2320,"mtime":1612456925439,"results":"54","hashOfConfig":"32"},{"size":195,"mtime":1612453705655,"results":"55","hashOfConfig":"32"},{"size":2909,"mtime":1612637440005,"results":"56","hashOfConfig":"32"},{"size":886,"mtime":1612581484364,"results":"57","hashOfConfig":"32"},{"size":9151,"mtime":1612581366577,"results":"58","hashOfConfig":"32"},{"size":5521,"mtime":1612582980812,"results":"59","hashOfConfig":"32"},{"size":2753,"mtime":1612637518411,"results":"60","hashOfConfig":"32"},{"size":2545,"mtime":1612635709568,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"zrc0zz",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},"/d/Personal/k/chuma-point-web/src/reportWebVitals.ts",[],["131","132"],"/d/Personal/k/chuma-point-web/src/App.tsx",[],"/d/Personal/k/chuma-point-web/src/pages/Home.tsx",["133","134","135","136","137"],"import React from 'react';\r\nimport { CardMedia, Container, Grid, Typography } from '@material-ui/core';\r\nimport CommonContainer from '../containers/Common';\r\nimport CheckInButton from '../components/Inputs/CheckInButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Stage, Graphics } from '@inlet/react-pixi';\r\nimport { Text } from 'recharts';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 20,\r\n        background: \"linear-gradient(180deg, #79bdb7 10%, #FFF  70%)\"\r\n    },\r\n    card: {\r\n        maxWidth: 300,\r\n    },\r\n});\r\n\r\n\r\nexport default (() => {\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={1}>\r\n                <Grid key={0} item>\r\n                    {/* <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"工事中\"\r\n                        height=\"240\"\r\n                        width=\"345\"\r\n                        image=\"https://stat.ameba.jp/user_images/20170206/07/shirokuma244/96/99/j/o1600096913862247139.jpg?caw=800\"\r\n                        title=\"工事中\"\r\n                    /> */}\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <Typography component={'h4'} style={{ color: 'white' }}>\r\n                        {commonContainer.t('Welcome！Chuma App!')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={2} item>\r\n                    <CheckInButton />\r\n                </Grid>\r\n            </Grid>\r\n            {/* <Stage>\r\n                <Graphics\r\n                    draw={g => {\r\n                        g.lineStyle(0)\r\n                        g.beginFill(0xffff0b, 0.5)\r\n                        g.drawCircle(100, 100, 50)\r\n                        g.endFill()\r\n\r\n                        g.lineStyle(0)\r\n                        g.beginFill(0xffffff, 1)\r\n                        g.drawCircle(100, 100, 20)\r\n                        g.endFill()\r\n                    }}\r\n                />\r\n            </Stage> */}\r\n        </div>\r\n    )\r\n}) as React.FC;",["138","139"],"/d/Personal/k/chuma-point-web/src/firebase/config.ts",[],"/d/Personal/k/chuma-point-web/src/index.tsx",[],"/d/Personal/k/chuma-point-web/src/users/Signup.tsx",[],["140","141"],"/d/Personal/k/chuma-point-web/src/users/Login.tsx",[],"/d/Personal/k/chuma-point-web/src/layout/Root.tsx",["142"],"/d/Personal/k/chuma-point-web/src/pages/Index.tsx",[],"/d/Personal/k/chuma-point-web/src/pages/Bank.tsx",[],"/d/Personal/k/chuma-point-web/src/layout/Authorize.tsx",["143"],"/d/Personal/k/chuma-point-web/src/pages/Tracker.tsx",["144","145"],"/d/Personal/k/chuma-point-web/src/pages/Profile.tsx",[],"/d/Personal/k/chuma-point-web/src/containers/Common.tsx",[],"/d/Personal/k/chuma-point-web/src/containers/Tracker.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Labels/DateTimeLabel.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Inputs/SleepButton.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Labels/MealLabel.tsx",["146"],"/d/Personal/k/chuma-point-web/src/components/Inputs/MealRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/components/Inputs/SleepRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/console/TrackerMain.tsx",["147","148","149","150","151"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport CommonContainer from '../containers/Common';\r\nimport TrackerContainer from '../containers/Tracker';\r\nimport DateTimeLabel from '../components/Labels/DateTimeLabel'\r\nimport SleepButton from '../components/Inputs/SleepButton';\r\nimport MealLabel from '../components/Labels/MealLabel';\r\nimport MealIconButton from '../components/Inputs/MealIconButton'\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\n\r\ninterface Props {\r\n    handleComponentChanges: (componentId: number) => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1  70%)\"\r\n        },\r\n        icons: {\r\n            position: \"relative\"\r\n        },\r\n        button: {\r\n            position: \"absolute\",\r\n            // top: `calc(50% - 35px)`,\r\n            // left: `calc(50% - 35px)`,\r\n            width: \"70px\",\r\n            height: \"70px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            backgroundColor: \"#FF8400\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"0.2em\",\r\n            borderColor: \"#FFC421\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        mealIconButton: {\r\n            position: \"absolute\",\r\n            left: \"5px\",\r\n            width: \"35px\",\r\n            height: \"35px\",\r\n            display: \"flex\",\r\n            borderRadius: '50%',\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            fontSize: \"10px\",\r\n            backgroundColor: \"#FF8400\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        donut: {\r\n            position: \"relative\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n        },\r\n        donutDefault: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\"\r\n        },\r\n        donutWhite: {\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFF\",\r\n            top: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            zIndex: 2\r\n        },\r\n        donutLine: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\"\r\n        },\r\n        donutText: {\r\n            top: \"35px\",\r\n            left: \"35px\",\r\n            width: \"230px\",\r\n            height: \"230px\",\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1 70%)\",\r\n            position: \"absolute\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 3\r\n        },\r\n        donutCase: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFC421\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            backgroundClip: \"border-box\",\r\n            overflow: \"hidden\"\r\n        },\r\n        mealButton: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            background: '#fff',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: '#5998AB',\r\n            height: 48,\r\n            width: 280,\r\n            padding: '0 30px',\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FFF\"\r\n            }\r\n        },\r\n        historyButton: {\r\n            top: \"-22px\",\r\n            width: \"90px\",\r\n            height: \"90px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            color: \"#FF8400\",\r\n            backgroundColor: \"#FFF\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FFF\"\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [now, setNow] = useState<Date>(new Date());\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const trackerContainer = TrackerContainer.useContainer();\r\n\r\n    const classes = useStyles();\r\n    const left = \"-35px\";\r\n    const top = \"-185px\";\r\n\r\n    let mealIcons = [\r\n        <MealIconButton key={0} top={-165} left={-35} />,\r\n        <MealIconButton key={1} top={-35} left={-165} />,\r\n        // <MealIconButton key={2} top={35} left={165} />,\r\n    ];\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            await trackerContainer.getTrackerRecord(now);\r\n            setIsLoading(false)\r\n        })()\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                <Grid key={0} item>\r\n                    <Typography variant=\"h6\" component={'h1'} style={{ paddingTop: '10px', color: 'white' }}>\r\n                        {commonContainer.t('Chuma Tracker')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <div className={classes.donut}>\r\n                        {mealIcons}\r\n                        <div className={classes.donutDefault}></div>\r\n                        <div className={classes.donutLine}></div>\r\n                        <div className={classes.donutText}>\r\n                            <DateTimeLabel />\r\n                        </div>\r\n                        <div className={classes.donutCase}></div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid key={2} item>\r\n                    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\" spacing={3}>\r\n                        <Grid key={0} item>\r\n                            <SleepButton label={'Wake up Time'} data={trackerContainer.wakeUpTime} handleComponentChanges={props.handleComponentChanges} recordType={0} />\r\n                        </Grid>\r\n                        <Grid key={1} item>\r\n                            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                                <Grid key={0} item>\r\n                                    <IconButton\r\n                                        aria-label={'History'}\r\n                                        className={classes.historyButton}\r\n                                        onClick={() => props.handleComponentChanges(3)}\r\n                                    >\r\n                                        <div>\r\n                                            <TimelineIcon fontSize=\"large\" style={{ color: '#5998AB' }} />\r\n                                            <Typography style={{ fontSize: '0.6em', color: '#5998AB' }} variant=\"body1\" component={'p'}>\r\n                                                {commonContainer.t('History')}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid key={2} item>\r\n                            <SleepButton label={'Bed Time'} data={trackerContainer.bedTime} handleComponentChanges={props.handleComponentChanges} recordType={1} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid key={3} item>\r\n                    <IconButton\r\n                        aria-label=\"addMeal\"\r\n                        className={classes.mealButton}\r\n                        onClick={() => props.handleComponentChanges(2)}\r\n                    >\r\n                        <RestaurantIcon className={classes.mealIconButton} />\r\n                        <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\r\n                            {commonContainer.t('Record Meal')}\r\n                        </Typography>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid key={4} item style={{ marginBottom: '40px' }}>\r\n                    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\" spacing={0}>\r\n                        <Grid key={0} item>\r\n                            <MealLabel label={'First Meal'} meals={trackerContainer.meals} index={0} />\r\n                        </Grid>\r\n                        <Grid key={1} item>\r\n                            <MealLabel label={'Recent Meal'} meals={trackerContainer.meals} index={trackerContainer.meals.length - 1} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}) as React.FC<Props>;\r\n","/d/Personal/k/chuma-point-web/src/components/Inputs/MealIconButton.tsx",["152"],"/d/Personal/k/chuma-point-web/src/components/Inputs/CheckInButton.tsx",["153","154","155"],"import React, { useState } from 'react';\nimport { Card, CardActionArea, Button, CardActions, CardMedia, Typography, Grid } from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport CommonContainer from '../../containers/Common';\nimport TrackerContainer from '../../containers/Tracker';\nimport homebear from '../../images/homebear.jpg'\n\ninterface Props {\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n            background: 'linear-gradient(55deg, #0989D9 10%, #63BDDB 70%)',\n            borderRadius: 30,\n            border: 0,\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n            boxShadow: '0 3px 5px 2px rgba(67, 120, 138, .3)',\n        },\n        root: {\n            // maxWidth: 345,\n            width: 200\n        },\n    })\n);\n\nexport default ((props) => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const commonContainer = CommonContainer.useContainer();\n    const trackerContainer = TrackerContainer.useContainer();\n\n    const classes = useStyles();\n\n    const handleCheckIn = async () => {\n        await trackerContainer.addPoints(1);\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Check In Polar Bear\"\n                    height=\"240\"\n                    image={homebear}\n                    title=\"Check In Polar Bear\"\n                />\n            </CardActionArea>\n            <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\n                {trackerContainer.isCheckedIn ? commonContainer.t('AlreadyCheckedIn') : ''}\n            </Typography>\n            <CardActions>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={trackerContainer.isCheckedIn}\n                    className={classes.submit}\n                    onClick={handleCheckIn}\n                >\n                    {commonContainer.t('CheckIn')}\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}) as React.FC<Props>;\n","/d/Personal/k/chuma-point-web/src/Models/Models.ts",[],"/d/Personal/k/chuma-point-web/src/components/Labels/SleepChart.tsx",["156","157","158","159","160","161"],"/d/Personal/k/chuma-point-web/src/pages/Medicine.tsx",["162","163"],"import React, { useState } from 'react';\r\nimport MedicineMain from '../console/MedicineMain';\r\nimport MedicineRecord from '../components/Inputs/MedicineRecord'\r\n\r\nexport default (() => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [componentId, setComponentId] = useState<number>(-1);\r\n\r\n    const handleComponentChanges = (componentId: number) => {\r\n        setComponentId(componentId);\r\n    }\r\n\r\n    let jsxElement: JSX.Element = <MedicineMain handleComponentChanges={handleComponentChanges} />\r\n\r\n    switch (componentId) {\r\n        case 0:\r\n            jsxElement = <MedicineRecord handleComponentChanges={handleComponentChanges} />\r\n            break;\r\n        default:\r\n            jsxElement = <MedicineMain handleComponentChanges={handleComponentChanges} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        jsxElement\r\n    )\r\n}) as React.FC;\r\n","/d/Personal/k/chuma-point-web/src/components/Inputs/MedicineRecord.tsx",[],"/d/Personal/k/chuma-point-web/src/console/MedicineMain.tsx",["164","165","166","167","168","169","170"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport CommonContainer from '../containers/Common';\r\nimport TrackerContainer from '../containers/Tracker';\r\nimport DateTimeLabel from '../components/Labels/DateTimeLabel'\r\nimport SleepButton from '../components/Inputs/SleepButton';\r\nimport MealLabel from '../components/Labels/MealLabel';\r\nimport MealIconButton from '../components/Inputs/MealIconButton'\r\n\r\ninterface Props {\r\n    handleComponentChanges: (componentId: number) => void,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // height: '80vh',\r\n            // display: 'flex',\r\n            // justify: 'flex-start',\r\n            // alignItems: 'center',\r\n            background: \"linear-gradient(180deg, #f09c48 10%, #fff  70%)\"\r\n        },\r\n        icons: {\r\n            position: \"relative\"\r\n        },\r\n        button: {\r\n            position: \"absolute\",\r\n            // top: `calc(50% - 35px)`,\r\n            // left: `calc(50% - 35px)`,\r\n            width: \"70px\",\r\n            height: \"70px\",\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            zIndex: 4,\r\n            color: \"white\",\r\n            backgroundColor: \"#FF8400\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"0.2em\",\r\n            borderColor: \"#FFC421\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FF8400\"\r\n            }\r\n        },\r\n        donut: {\r\n            position: \"relative\",\r\n            width: \"300px\",\r\n            height: \"300px\"\r\n        },\r\n        donutDefault: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\"\r\n        },\r\n        donutWhite: {\r\n            width: \"70%\",\r\n            height: \"70%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFF\",\r\n            top: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            zIndex: 2\r\n        },\r\n        donutLine: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\"\r\n        },\r\n        donutText: {\r\n            top: \"35px\",\r\n            left: \"35px\",\r\n            width: \"230px\",\r\n            height: \"230px\",\r\n            background: \"linear-gradient(180deg, #80BED1 10%, #BCE8E1 70%)\",\r\n            position: \"absolute\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 3\r\n        },\r\n        donutCase: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            background: \"#FFC421\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            backgroundClip: \"border-box\",\r\n            overflow: \"hidden\"\r\n        },\r\n        mealButton: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            background: '#f09c48',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: '#5998AB',\r\n            height: 48,\r\n            width: 280,\r\n            padding: '0 30px',\r\n            \"&:hover\": {\r\n                backgroundColor: \"#f09c48\"\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\nexport default ((props) => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [now, setNow] = useState<Date>(new Date());\r\n    const commonContainer = CommonContainer.useContainer();\r\n    const trackerContainer = TrackerContainer.useContainer();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            await trackerContainer.getTrackerRecord(now);\r\n            setIsLoading(false)\r\n        })()\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                <Grid key={0} item>\r\n                    <Typography variant=\"h6\" component={'h1'} style={{ paddingTop: '10px', color: 'white' }}>\r\n                        {commonContainer.t('Chuma Tracker')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid key={1} item>\r\n                    <div className={classes.donut}>\r\n                        <div className={classes.donutDefault}></div>\r\n                        <div className={classes.donutLine}></div>\r\n                        <div className={classes.donutText}>\r\n                            <DateTimeLabel />\r\n                        </div>\r\n                        <div className={classes.donutCase}></div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid key={3} item>\r\n                    <IconButton\r\n                        aria-label=\"addMeal\"\r\n                        className={classes.mealButton}\r\n                        onClick={() => props.handleComponentChanges(2)}\r\n                    >\r\n                        <Typography style={{ color: '#000' }} variant=\"h6\" component={'h1'}>\r\n                            {commonContainer.t('Record Meal')}\r\n                        </Typography>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}) as React.FC<Props>;\r\n","/d/Personal/k/chuma-point-web/src/console/History.tsx",["171","172","173","174","175"],"/d/Personal/k/chuma-point-web/src/containers/History.tsx",["176","177"],"import { useState } from 'react';\r\nimport useReactRouter from 'use-react-router';\r\nimport { createContainer } from 'unstated-next';\r\nimport { firebase } from '../firebase/config';\r\nimport { LastWeekSleepTimeModel } from '../Models/Models'\r\nimport { format, getUnixTime, parse } from 'date-fns'\r\n\r\nexport default createContainer(() => {\r\n    const { history } = useReactRouter();\r\n    const [lastWeekSleepTimes, setLastWeekSleepTimes] = useState<LastWeekSleepTimeModel[]>([])\r\n\r\n    const getLastWeekSleepTimes = async (today: Date) => {\r\n        try {\r\n            firebase.auth().onAuthStateChanged(async user => {\r\n                if (user) {\r\n                    const trackerRecordRef = firebase.firestore()\r\n                        .collection('users').doc(user.uid)\r\n                        .collection('trackerRecords');\r\n\r\n                    // TODO\r\n                    // if (lastWeekSleepTimes.length < 0) {\r\n                    // if (lastWeekSleepTimes[lastWeekSleepTimes.length - 1].createdDate !== format(today, 'yyyy-MM-dd')) {\r\n                    //     console.log(234)\r\n                    // }\r\n                    let lastSevenDayParameter = getLastSevenDay(today);\r\n\r\n                    const snapshot = await trackerRecordRef\r\n                        .where(firebase.firestore.FieldPath.documentId(), 'in', lastSevenDayParameter)\r\n                        .get();\r\n\r\n                    let sleepTimeDatas: LastWeekSleepTimeModel[] = [];\r\n\r\n                    snapshot.forEach(doc => {\r\n                        let data = doc.data();\r\n                        let sleepTimeData = { 'createdDate': doc.id, 'wakeUpTime': new Date(data.wakeUpTime).getHours().toString(), 'bedTime': new Date(data.bedTime).getHours().toString() };\r\n\r\n                        sleepTimeDatas.push(sleepTimeData);\r\n                    });\r\n                    setLastWeekSleepTimes(sleepTimeDatas);\r\n                    // }\r\n\r\n                }\r\n            })\r\n        } catch (err) {\r\n            if (err.status === 401) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n    }\r\n\r\n    const getLastSevenDay = (today: Date) => {\r\n        let lastSevenDays: string[] = [];\r\n\r\n        lastSevenDays.push(format(today, 'yyyy-MM-dd'));\r\n        for (let i = 1; i < 7; i++) {\r\n            lastSevenDays.push(format(new Date(today.getFullYear(), today.getMonth(), today.getDate() - i), 'yyyy-MM-dd'))\r\n        }\r\n        return lastSevenDays;\r\n    }\r\n\r\n    return {\r\n        getLastWeekSleepTimes, lastWeekSleepTimes\r\n    };\r\n});",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":19},{"ruleId":"182","severity":1,"message":"186","line":2,"column":21,"nodeType":"184","messageId":"185","endLine":2,"endColumn":30},{"ruleId":"182","severity":1,"message":"187","line":6,"column":10,"nodeType":"184","messageId":"185","endLine":6,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":6,"column":17,"nodeType":"184","messageId":"185","endLine":6,"endColumn":25},{"ruleId":"182","severity":1,"message":"189","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":14},{"ruleId":"178","replacedBy":"190"},{"ruleId":"180","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"180","replacedBy":"193"},{"ruleId":"182","severity":1,"message":"194","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":23},{"ruleId":"195","severity":1,"message":"196","line":24,"column":8,"nodeType":"197","endLine":24,"endColumn":10,"suggestions":"198"},{"ruleId":"182","severity":1,"message":"199","line":11,"column":12,"nodeType":"184","messageId":"185","endLine":11,"endColumn":21},{"ruleId":"182","severity":1,"message":"200","line":11,"column":23,"nodeType":"184","messageId":"185","endLine":11,"endColumn":35},{"ruleId":"182","severity":1,"message":"201","line":3,"column":29,"nodeType":"184","messageId":"185","endLine":3,"endColumn":33},{"ruleId":"182","severity":1,"message":"199","line":139,"column":12,"nodeType":"184","messageId":"185","endLine":139,"endColumn":21},{"ruleId":"182","severity":1,"message":"202","line":140,"column":17,"nodeType":"184","messageId":"185","endLine":140,"endColumn":23},{"ruleId":"182","severity":1,"message":"203","line":145,"column":11,"nodeType":"184","messageId":"185","endLine":145,"endColumn":15},{"ruleId":"182","severity":1,"message":"204","line":146,"column":11,"nodeType":"184","messageId":"185","endLine":146,"endColumn":14},{"ruleId":"195","severity":1,"message":"205","line":160,"column":8,"nodeType":"197","endLine":160,"endColumn":10,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"207","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"201","line":2,"column":76,"nodeType":"184","messageId":"185","endLine":2,"endColumn":80},{"ruleId":"182","severity":1,"message":"199","line":31,"column":12,"nodeType":"184","messageId":"185","endLine":31,"endColumn":21},{"ruleId":"182","severity":1,"message":"200","line":31,"column":23,"nodeType":"184","messageId":"185","endLine":31,"endColumn":35},{"ruleId":"182","severity":1,"message":"208","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":15},{"ruleId":"182","severity":1,"message":"210","line":5,"column":18,"nodeType":"184","messageId":"185","endLine":5,"endColumn":29},{"ruleId":"182","severity":1,"message":"211","line":5,"column":31,"nodeType":"184","messageId":"185","endLine":5,"endColumn":36},{"ruleId":"182","severity":1,"message":"212","line":31,"column":21,"nodeType":"184","messageId":"185","endLine":31,"endColumn":31},{"ruleId":"182","severity":1,"message":"213","line":33,"column":11,"nodeType":"184","messageId":"185","endLine":33,"endColumn":18},{"ruleId":"182","severity":1,"message":"199","line":6,"column":12,"nodeType":"184","messageId":"185","endLine":6,"endColumn":21},{"ruleId":"182","severity":1,"message":"200","line":6,"column":23,"nodeType":"184","messageId":"185","endLine":6,"endColumn":35},{"ruleId":"182","severity":1,"message":"214","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":22},{"ruleId":"182","severity":1,"message":"215","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":19},{"ruleId":"182","severity":1,"message":"216","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":17},{"ruleId":"182","severity":1,"message":"217","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":22},{"ruleId":"182","severity":1,"message":"199","line":115,"column":12,"nodeType":"184","messageId":"185","endLine":115,"endColumn":21},{"ruleId":"182","severity":1,"message":"202","line":116,"column":17,"nodeType":"184","messageId":"185","endLine":116,"endColumn":23},{"ruleId":"195","severity":1,"message":"205","line":128,"column":8,"nodeType":"197","endLine":128,"endColumn":10,"suggestions":"218"},{"ruleId":"182","severity":1,"message":"219","line":2,"column":24,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"199","line":33,"column":12,"nodeType":"184","messageId":"185","endLine":33,"endColumn":21},{"ruleId":"182","severity":1,"message":"220","line":34,"column":12,"nodeType":"184","messageId":"185","endLine":34,"endColumn":15},{"ruleId":"182","severity":1,"message":"202","line":34,"column":17,"nodeType":"184","messageId":"185","endLine":34,"endColumn":23},{"ruleId":"182","severity":1,"message":"221","line":36,"column":11,"nodeType":"184","messageId":"185","endLine":36,"endColumn":27},{"ruleId":"182","severity":1,"message":"210","line":6,"column":18,"nodeType":"184","messageId":"185","endLine":6,"endColumn":29},{"ruleId":"182","severity":1,"message":"211","line":6,"column":31,"nodeType":"184","messageId":"185","endLine":6,"endColumn":36},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"@typescript-eslint/no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Stage' is defined but never used.","'Graphics' is defined but never used.","'Text' is defined but never used.",["222"],["223"],["222"],["223"],"'ScatterPlotIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'commonContainer', 'history', 'historyContainer', and 'trackerContainer'. Either include them or remove the dependency array.","ArrayExpression",["224"],"'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'Grid' is defined but never used.","'setNow' is assigned a value but never used.","'left' is assigned a value but never used.","'top' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'now' and 'trackerContainer'. Either include them or remove the dependency array.",["225"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'getUnixTime' is defined but never used.","'parse' is defined but never used.","'setLoading' is assigned a value but never used.","'classes' is assigned a value but never used.","'RestaurantIcon' is defined but never used.","'SleepButton' is defined but never used.","'MealLabel' is defined but never used.","'MealIconButton' is defined but never used.",["226"],"'IconButton' is defined but never used.","'now' is assigned a value but never used.","'trackerContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},"Update the dependencies array to be: [commonContainer, history, historyContainer, trackerContainer]",{"range":"232","text":"233"},"Update the dependencies array to be: [now, trackerContainer]",{"range":"234","text":"235"},{"range":"236","text":"235"},[927,929],"[commonContainer, history, historyContainer, trackerContainer]",[4938,4940],"[now, trackerContainer]",[3995,3997]]